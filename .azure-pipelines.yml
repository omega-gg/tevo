#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh qt5
      sh build.sh win32 all
      cd deploy
      7z a ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-win32-qt5

- job: win64_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh qt5
      sh build.sh win64 all
      cd deploy
      7z a ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-win64-qt5

- job: win64_qt6
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh win64 all
      cd deploy
      7z a ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-win64-qt6

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS_qt5
  pool:
    vmImage: "macOS-14"
  steps:
  - bash: |
      sh environment.sh qt5
      sh build.sh macOS all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-macOS-qt5

- job: macOS_qt6
  pool:
    vmImage: "macOS-14"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh macOS all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-macOS-qt6

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32_qt4
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/tevo i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /tevo;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh environment.sh qt4;
                                     sh build.sh linux all;
                                     cd deploy;
                                     zip -rq ../tevo.zip *"
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-linux32-qt4

- job: linux64_qt4
  pool:
    # NOTE: Ubuntu 20.04 seems to be required for qt4-default.
    vmImage: "ubuntu-20.04"
  steps:
  - bash: |
      sh environment.sh qt4
      sh build.sh linux all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-linux64-qt4

#--------------------------------------------------------------------------------------------------

- job: linux32_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/tevo i386/ubuntu:20.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /tevo;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh environment.sh qt5;
                                     sh build.sh linux all;
                                     cd deploy;
                                     zip -rq ../tevo.zip *"
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-linux32-qt5

- job: linux64_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh environment.sh qt5
      sh build.sh linux all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-linux64-qt5

- job: linux64_qt6
  pool:
    vmImage: "ubuntu-latest"
  steps:
  # NOTE: We need an older version to package the application.
  # NOTE Qt6: Ubuntu 20.04 is required for glibc.
  - bash: |
      docker run -d --name ubuntu -v $PWD:/tevo amd64/ubuntu:20.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /tevo;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh environment.sh qt6;
                                     sh build.sh linux all;
                                     cd deploy;
                                     zip -rq ../tevo.zip *"
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-linux64-qt6

#--------------------------------------------------------------------------------------------------
# Android
#--------------------------------------------------------------------------------------------------

- job: android_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh environment.sh qt5
      sh build.sh android all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-android-qt5

- job: android_qt6
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh android all
      cd deploy
      zip -rq ../tevo.zip *
  - publish: $(System.DefaultWorkingDirectory)/tevo.zip
    artifact: tevo-android-qt6
